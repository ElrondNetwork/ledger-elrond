name: Build Device App

on:
  workflow_dispatch:
    inputs:
      Version:
        description: "Version"
        required: true
        default: "v1.0.0"
      APPVERSION_M:
        description: "APPVERSION_M"
        required: true
        default: "1"
      APPVERSION_N:
        description: "APPVERSION_N"
        required: true
        default: "0"
      APPVERSION_P:
        description: "APPVERSION_P"
        required: true
        default: "0"

jobs:
  build:
    name: Build and Upload Device App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install system dependencies
        run: |
          sudo apt install gcc-multilib g++-multilib -y
          python3 --version
          pip3 --version
          pip3 install Pillow
      - name: Install buildchain
        run: |
          mkdir buildchain
          mkdir buildchain/clang-arm-fropi
          mkdir sdk
          mkdir sdk/nanos-secure-sdk

          wget https://launchpad.net/gcc-arm-embedded/5.0/5-2016-q1-update/+download/gcc-arm-none-eabi-5_3-2016q1-20160330-linux.tar.bz2
          tar xf gcc-arm-none-eabi-5_3-2016q1-20160330-linux.tar.bz2
          rm gcc-arm-none-eabi-5_3-2016q1-20160330-linux.tar.bz2
          mv gcc-arm-none-eabi-5_3-2016q1 buildchain/gcc-arm-none-eabi-5_3-2016q1

          wget http://releases.llvm.org/4.0.0/clang+llvm-4.0.0-x86_64-linux-gnu-ubuntu-16.10.tar.xz -O clang+llvm.tar.xz
          tar xf clang+llvm.tar.xz
          rm clang+llvm.tar.xz
          mv clang+llvm-4.0.0-x86_64-linux-gnu-ubuntu-16.10/* buildchain/clang-arm-fropi

          wget https://github.com/LedgerHQ/nanos-secure-sdk/archive/nanos-160.tar.gz -O nanos-secure-sdk.tar.gz
          tar xf nanos-secure-sdk.tar.gz
          rm nanos-secure-sdk.tar.gz
          mv nanos-secure-sdk-nanos-160/* sdk/nanos-secure-sdk
      - name: Build project
        run: |
          BOLOS_ENV=$(pwd)/buildchain BOLOS_SDK=$(pwd)/sdk/nanos-secure-sdk APPVERSION_M=${APPVERSION_M} APPVERSION_N=${APPVERSION_N} APPVERSION_P=${APPVERSION_P} make
          cp bin/app.hex elrond-ledger-app-${{ github.event.inputs.Version }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.Version }}
          release_name: New Release
          draft: false
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: elrond-ledger-app-${{ github.event.inputs.Version }}
          asset_name: elrond-ledger-app-${{ github.event.inputs.Version }}

